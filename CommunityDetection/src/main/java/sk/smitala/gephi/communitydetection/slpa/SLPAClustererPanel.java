/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.smitala.gephi.communitydetection.slpa;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.net.URI;
import java.net.URISyntaxException;
import org.openide.util.Exceptions;
import sk.smitala.gephi.communitydetection.utils.CommonUtils;

/**
 *
 * @author smitalm
 */
public class SLPAClustererPanel extends javax.swing.JPanel {

    /**
     * Creates new form SLPAClustererPanel
     */
    public SLPAClustererPanel() {
	initComponents();
	setLinkButton();
    }

    private void setLinkButton() {
	final URI uri;
	try {
	    uri = new URI("http://arxiv.org/pdf/1202.2465v1.pdf");
	} catch (URISyntaxException ex) {
	    Exceptions.printStackTrace(ex);
	    linkButton.setEnabled(false);
	    return;
	}
	linkButton.setToolTipText(uri.toString());
	linkButton.addMouseListener(new MouseListener() {
	    @Override
	    public void mouseClicked(MouseEvent e) {
		CommonUtils.open(uri);
	    }

	    @Override
	    public void mousePressed(MouseEvent e) {
	    }

	    @Override
	    public void mouseReleased(MouseEvent e) {
	    }

	    @Override
	    public void mouseEntered(MouseEvent e) {
	    }

	    @Override
	    public void mouseExited(MouseEvent e) {
	    }
	});
    }

    public void setIterations(int iterations) {
	this.iterations.setText(iterations + "");
    }

    public int getIterations() {
	try {
	    return Integer.parseInt(this.iterations.getText());
	} catch (NumberFormatException e) {
	    e.printStackTrace(System.err);
	    return SLPAClusterer.ITERATIONS_DEFAULT;
	}
    }

    public void setThreshold(double threshold) {
	this.threshold.setText(threshold + "");
    }

    public double getThreshold() {
	try {
	    return Double.parseDouble(this.threshold.getText());
	} catch (NumberFormatException e) {
	    e.printStackTrace(System.err);
	    return SLPAClusterer.THRESHOLD_DEFAULT;
	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new org.jdesktop.swingx.JXHeader();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        iterations = new javax.swing.JTextField();
        threshold = new javax.swing.JTextField();
        linkButton = new javax.swing.JLabel();
        algorithmParams = new javax.swing.JLabel();

        header.setDescription(org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.header.description")); // NOI18N
        header.setMinimumSize(new java.awt.Dimension(288, 140));
        header.setTitle(org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.header.title")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.jLabel2.text")); // NOI18N

        iterations.setText(org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.iterations.text")); // NOI18N

        threshold.setText(org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.threshold.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(linkButton, org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.linkButton.text")); // NOI18N
        linkButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        algorithmParams.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(algorithmParams, org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.algorithmParams.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(linkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(iterations)
                            .addComponent(threshold, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(algorithmParams, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(linkButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(algorithmParams)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(iterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(threshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        linkButton.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(SLPAClustererPanel.class, "SLPAClustererPanel.linkButton.AccessibleContext.accessibleDescription")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel algorithmParams;
    private org.jdesktop.swingx.JXHeader header;
    private javax.swing.JTextField iterations;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel linkButton;
    private javax.swing.JTextField threshold;
    // End of variables declaration//GEN-END:variables
}
