OpenIDE-Module-Name=ScanClustering
ScanClustererPanel.algorithmParams.text=Algorithm properties (affects what algorithm considers a cluster)
ScanClustererPanel.epsilon.text=jTextField1
ScanClustererPanel.mu.text=jTextField2
ScanClustererPanel.epsilonDescription.text=Similarity threshold. Value between 0-1
ScanClustererPanel.muDescription.text=Number of nodes required to form a cluster
ScanClustererPanel.epsilonLabel.text=epsilon
ScanClustererPanel.muLabel.text=mu
ScanClustererPanel.header.description=Network clustering (or graph partitioning) is an important task for the discovery of underlying structures in networks. Many \nalgorithms find clusters by maximizing the number of intra-cluster edges. While such algorithms find useful and interesting \nstructures, they tend to fail to identify and isolate two kinds of vertices that play special roles \u2013 vertices that bridge clusters \n(hubs) and vertices that are marginally connected to clusters (outliers). Identifying hubs is useful for applications such as viral \nmarketing and epidemiology since hubs are responsible for spreading ideas or disease. In contrast, outliers have little or no \ninfluence, and may be isolated as noise in the data. In this paper, we proposed a novel algorithm called SCAN (Structural \nClustering Algorithm for Networks), which detects clusters, hubs and outliers in networks. It clusters vertices based on a structural \nsimilarity measure. The algorithm is fast and efficient, visiting each vertex only once. An empirical evaluation of the method \nusing both synthetic and real datasets demonstrates superior performance over other methods such as the modularity-based \nalgorithms
ScanClustererPanel.header.title=Structural Clustering Algorithm for Networks
ScanClustererPanel.linkButton.text=<HTML><FONT color=\\"#000099\\"><U>Learn more about SCAN algorithm</U></FONT></HTML>
ScanClustererPanel.algorithmParams1.text=Node grouping properties
ScanClustererPanel.epsilonDescription1.text=(optional) if checked, all hubs will be marked as "Hub" instead of "Hub ID"
ScanClustererPanel.epsilonDescription2.text=(optional) if checked, all outliers will be marked as "Outlier" instead of "Outlier ID"
ScanClustererPanel.groupHubs.text=Group hubs
ScanClustererPanel.groupOutliers.text=Group outliers
ScanClustererPanel.algorithmParams2.text=Other
ScanClustererPanel.experimentalImprovement.text=Experimental improvement
